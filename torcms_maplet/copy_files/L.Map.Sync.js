!function(){var NO_ANIMATION={animate:!1,reset:!0,disableViewprereset:!0};L.Sync=function(){},L.Sync.offsetHelper=function(ratioRef,ratioTarget){var or=L.Util.isArray(ratioRef)?ratioRef:[.5,.5],ot=L.Util.isArray(ratioTarget)?ratioTarget:[.5,.5];return function(center,zoom,refMap,targetMap){var rs=refMap.getSize(),ts=targetMap.getSize(),pt=refMap.project(center,zoom).subtract([(.5-or[0])*rs.x,(.5-or[1])*rs.y]).add([(.5-ot[0])*ts.x,(.5-ot[1])*ts.y]);return refMap.unproject(pt,zoom)}},L.Map.include({sync:function(map,options){return this._initSync(),options=L.extend({noInitialSync:!1,syncCursor:!1,syncCursorMarkerOptions:{radius:10,fillOpacity:.3,color:"#da291c",fillColor:"#fff"},offsetFn:function(center,zoom,refMap,targetMap){return center}},options),-1===this._syncMaps.indexOf(map)&&(this._syncMaps.push(map),this._syncOffsetFns[L.Util.stamp(map)]=options.offsetFn),options.noInitialSync||map.setView(options.offsetFn(this.getCenter(),this.getZoom(),this,map),this.getZoom(),NO_ANIMATION),options.syncCursor&&(void 0===map.cursor&&(map.cursor=L.circleMarker([0,0],options.syncCursorMarkerOptions).addTo(map)),this._cursors.push(map.cursor),this.on("mousemove",this._cursorSyncMove,this),this.on("mouseout",this._cursorSyncOut,this)),this.on("resize zoomend",this._selfSetView),this.on("moveend",this._syncOnMoveend),this.on("dragend",this._syncOnDragend),this},unsync:function(map){var self=this;return this._cursors&&this._cursors.forEach(function(cursor,indx,_cursors){cursor===map.cursor&&_cursors.splice(indx,1)}),map.cursor&&map.cursor.setLatLng([0,0]),this._syncMaps&&this._syncMaps.forEach(function(synced,id){map===synced&&(delete self._syncOffsetFns[L.Util.stamp(map)],self._syncMaps.splice(id,1))}),this._syncMaps&&0!=this._syncMaps.length||(this.off("resize zoomend",this._selfSetView),this.off("moveend",this._syncOnMoveend),this.off("dragend",this._syncOnDragend)),this},isSynced:function(otherMap){var has=this.hasOwnProperty("_syncMaps")&&Object.keys(this._syncMaps).length>0;return has&&otherMap&&(has=!1,this._syncMaps.forEach(function(synced){otherMap==synced&&(has=!0)})),has},_cursorSyncMove:function(e){this._cursors.forEach(function(cursor){cursor.setLatLng(e.latlng)})},_cursorSyncOut:function(e){this._cursors.forEach(function(cursor){cursor.setLatLng([0,0])})},_selfSetView:function(e){this.setView(this.getCenter(),this.getZoom(),NO_ANIMATION)},_syncOnMoveend:function(e){this._syncDragend&&(this._syncDragend=!1,this._selfSetView(e),this._syncMaps.forEach(function(toSync){toSync.fire("moveend")}))},_syncOnDragend:function(e){this._syncDragend=!0},_initSync:function(){if(!this._syncMaps){var originalMap=this;this._syncMaps=[],this._cursors=[],this._syncOffsetFns={},L.extend(originalMap,{setView:function(center,zoom,options,sync){function sandwich(obj,fn){var viewpreresets=[],doit=options&&options.disableViewprereset&&obj&&obj._events;doit&&(viewpreresets=obj._events.viewprereset,obj._events.viewprereset=[]);var ret=fn(obj);return doit&&(obj._events.viewprereset=viewpreresets),ret}var ret=sandwich(this,function(obj){return L.Map.prototype.setView.call(obj,center,zoom,options)});return sync||originalMap._syncMaps.forEach(function(toSync){sandwich(toSync,function(obj){return toSync.setView(originalMap._syncOffsetFns[L.Util.stamp(toSync)](center,zoom,originalMap,toSync),zoom,options,!0)})}),ret},panBy:function(offset,options,sync){return sync||originalMap._syncMaps.forEach(function(toSync){toSync.panBy(offset,options,!0)}),L.Map.prototype.panBy.call(this,offset,options)},_onResize:function(event,sync){return sync||originalMap._syncMaps.forEach(function(toSync){toSync._onResize(event,!0)}),L.Map.prototype._onResize.call(this,event)},_stop:function(sync){L.Map.prototype._stop.call(this),sync||originalMap._syncMaps.forEach(function(toSync){toSync._stop(!0)})}}),originalMap.dragging._draggable._updatePosition=function(){L.Draggable.prototype._updatePosition.call(this);var self=this;originalMap._syncMaps.forEach(function(toSync){L.DomUtil.setPosition(toSync.dragging._draggable._element,self._newPos),toSync.eachLayer(function(layer){if(void 0!==layer._google){var offsetFn=originalMap._syncOffsetFns[L.Util.stamp(toSync)],center=offsetFn(originalMap.getCenter(),originalMap.getZoom(),originalMap,toSync);layer._google.setCenter(center)}}),toSync.fire("move")})}}}})}();